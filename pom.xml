<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.opentool</groupId>
    <artifactId>opentool</artifactId>
    <version>1.0.0</version>

    <name>opentool</name>
    <!-- 这里可以改成网站上线地址 -->
    <url>https://maven.apache.org</url>
    <description>开源工具微服务平台</description>

    <properties>
        <opentool.version>1.0.0</opentool.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-boot.version>2.7.13</spring-boot.version>
        <spring-cloud.version>2021.0.8</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.5.0</spring-cloud-alibaba.version>
        <mysql-connector.version>8.0.23</mysql-connector.version>
        <mybatis-plus.version>3.4.2</mybatis-plus.version>
        <fastjson2.verson>2.0.34</fastjson2.verson>
        <aliyun.oss.version>1.0.0</aliyun.oss.version>
        <aliyun.sdk.core.version>4.5.7</aliyun.sdk.core.version>
        <thumbnailator.version>0.4.19</thumbnailator.version>
        <chatgpt.java.version>1.1.5</chatgpt.java.version>
        <microsoft.tts.version>1.32.1</microsoft.tts.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot 依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <!-- type默认值是jar，声明为pom类型表示该依赖项是一个Maven项目（Project Object Model），它通常用于导入其他Maven项目的POM文件作为依赖项，而不是导入jar包或其他类型的文件。 -->
                <scope>import</scope>
                <!-- scopre默认值为compile，声明为import范围表示该依赖项可以被导入到POM中，以便在声明其他依赖时重用。 -->
            </dependency>

            <!-- SpringCloud 微服务 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- SpringCloud-Alibaba 微服务 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--  fastjson2 依赖配置 -->
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.verson}</version>
            </dependency>

            <!-- aliyun-oss -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>aliyun-oss-spring-boot-starter</artifactId>
                <version>${aliyun.oss.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.aliyun</groupId>
                        <artifactId>aliyun-java-sdk-oss</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.aliyun</groupId>
                <artifactId>aliyun-java-sdk-core</artifactId>
                <version>${aliyun.sdk.core.version}</version>
            </dependency>

            <!-- Google图片压缩模块 -->
            <dependency>
                <groupId>net.coobird</groupId>
                <artifactId>thumbnailator</artifactId>
                <version>${thumbnailator.version}</version>
            </dependency>

            <!-- chatgpt-java依赖 -->
            <dependency>
                <groupId>com.unfbx</groupId>
                <artifactId>chatgpt-java</artifactId>
                <version>${chatgpt.java.version}</version>
            </dependency>

            <!-- Microsoft-TTS -->
            <dependency>
                <groupId>com.microsoft.cognitiveservices.speech</groupId>
                <artifactId>client-sdk</artifactId>
                <version>${microsoft.tts.version}</version>
            </dependency>

            <!-- 核心模块 -->
            <dependency>
                <groupId>com.opentool</groupId>
                <artifactId>opentool-common-core</artifactId>
                <version>${opentool.version}</version>
            </dependency>

            <!-- 系统接口 -->
            <dependency>
                <groupId>com.opentool</groupId>
                <artifactId>opentool-api-system</artifactId>
                <version>${opentool.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- bootstrap 启动器 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
    </dependencies>

    <!--  项目打包类型  -->
    <packaging>pom</packaging>
    <!--模块管理，实现pom项目之间的聚合关系，
    聚合关系下对父项目使用mvn命令，对其它子项目产生同样的效果-->
    <modules>
        <module>opentool-api</module>
        <module>opentool-gateway</module>
        <module>opentool-common</module>
        <module>opentool-modules</module>
        <module>opentool-modules/opentool-general-tool</module>
    </modules>

    <build>
        <finalName>OpenTool-Cloud</finalName>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
              <source>${java.version}</source>
              <target>${java.version}</target>
              <encoding>${project.build.sourceEncoding}</encoding>
            </configuration>
          </plugin>
        </plugins>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-maven-plugin</artifactId>
              <version>${spring-boot.version}</version>
              <executions>
                <execution>
                  <goals>
                    <goal>repackage</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>public</id>
            <name>aliyun nexus</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
